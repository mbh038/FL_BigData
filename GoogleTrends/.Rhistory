set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
e
y
ploy(y)
plot(y)
plot(x,y)
install.packages("lubridate")
swirl()
library(lubridate)
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("lubridate", lib.loc="~/R/win-library/3.2")
install.packages("tidyr")
library("tidyr", lib.loc="~/R/win-library/3.2")
install.packages("swirl")
library("swirl", lib.loc="~/R/win-library/3.2")
library("tidyr", lib.loc="~/R/win-library/3.2")
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
?spread()
?spread
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
submit()
submit()
?extract_numeric
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(passed,status="failed")
failed<-mutate(failed,status="failed")
bind_rows(passed,failed)
sat
submit()
submit()
?separate
submit()
submit()
?plot
plot(sin,-pi,2*pi)
?par
library(datasets)
hist(airquality$Ozone)
with(airquality,plot(wind,Ozone))
with(airquality,plot(Wind,Ozone))
?transform
str(airquality)
airquality<-transform(airquality,Month=factor(Month))
str(airquality)
boxplot(Ozone~Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month,ylab="Ozone"")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone"")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone")
par(bg=3)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone")
par(bg=1)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone")
par(bg=2)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone")
par(bg=999)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone")
par(bg="transparent")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone")
par("ch")
with(airquality,plot(wind,Ozone)
)
with(airquality,plot(Wind,Ozone)
)
title(Main="Ozone ans wind in New York City")
title(main="Ozone ans wind in New York City")
title(main="Ozone and wind in New York City")
with(airquality,plot(wind,Ozone),title(main="Ozone ans wind in New York City"))
with(airquality,plot(wind,Ozone),title(main="Ozone ans wind in New York City"))
with(airquality,plot(Wind,Ozone),title(main="Ozone ans wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
with(subset(airquality,Month!=5),points(Wind,Ozone,col="red"))
with(airquality,plot(Wind,Ozone),title(main="Ozone ans wind in New York City"),type="n")
with(airquality,plot(Wind,Ozone),
title(main="Ozone ans wind in New York City"),type="n")
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
with(subset(airquality,Month!=5),points(Wind,Ozone,col="red"))
legend("topright",pch=1,col=c("blue","red"),legend=c("May","not May"))
with(airquality,plot(Wind,Ozone),
title(main="Ozone ans wind in New York City"),pch=20)
model<-lm(Ozone~Wind,airquality)
with(airquality,plot(Wind,Ozone),
title(main="Ozone ans wind in New York City"),pch=20)
model<-lm(Ozone~Wind,airquality)
abline(model,lwd=2)
with(airquality,plot(Wind,Ozone),
title(main="Ozone ans wind in New York City"),pch=20)
model<-lm(Ozone~Wind,airquality)
abline(model,lwd=2)
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone),main="Ozone and wind",
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
})
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone),main="Ozone and wind"),
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
})
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone,main="Ozone and wind"),
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
})
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone,main="Ozone and wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
})
?pbeta
pbeta(0.75,2,1)
dbeta(0.75,2,1)
dbeta(1,2,1)
dbeta(1.5,2,1)
dbeta(1.5,2,2)
library(swirl)
swirl()
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(students2,sex_class,c("sex","class"),sep="_")
separate(res,sex_class,c("sex","class"),sep="_")
separate(res,sex_class,c("sex","class"))
?chain
submit()
students3
submit()
?spread()
?spread
submit()
submit()
submit()
extract_numeric("class5")
submit()
students4
?select
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
bind_rows(passed,failed)
sat
?contains
?select
submit()
submit()
submit()
submit()
setwd("C:/Users/Mike/Rspace/FL_BigData/GoogleTrends")
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
library(dplyr)
# get the data
trendsData<-read.csv("report.csv",skip=4,nrows=595,stringsAsFactors=FALSE )
# look at it
head(trendsData)
tail(trendsData)
str(trendsData)
# extract year from Week column and store as numeric
trendsData$year <- substring(trendsData$Week, first=1, last=4)
trendsData$year <- as.numeric(trendsData$year)
summary(trendsData)
# create 2012 subset
trendsData2012<-filter(trendsData,year==2012)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
list.files(./Trends)
list.files("Trends")
allFileNames<-list.files("Trends")
allFileNames
substring(allFileNames,first=1,last=2)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
list.file("Trends")
list.files("Trends")
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
foi
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
str(allFOIs)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
str(allFOIs)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
str(allFOIs)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
str(allFOIs)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
boxplot(allFOIs$FOI)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1) # row names (numbers) are in the
# 1st column.
head(gdpPerCap)
# gwt GDPS
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1) # row names (numbers) are in the
# 1st column.
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap<-c("Country","GDP_PC"))
str(gdpPerCap)
head(gdpPerCap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1) # row names (numbers) are in the
# 1st column.
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
head(gdpPerCap$GDP_PC)
gdpPerCap[1,]
gdpPerCap[1,2]
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
?gsub
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
gdpPerCap$GDP_PC<-sub("$","",gdpPerCap$GDP_PC)
head(gdpPercap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
gdpPerCap$GDP_PC<-sub("$","",gdpPerCap$GDP_PC)
head(gdpPerCap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
gdpPerCap$GDP_PC<-sub("$","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC<-sub(",","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
gdpPerCap$GDP_PC<-sub("$","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC<-sub(",","",gdpPerCap$GDP_PC)
#gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
str(gdpPerCap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
gdpPerCap$GDP_PC<-gsub("$","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC<-gsub(",","",gdpPerCap$GDP_PC)
#gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
str(gdpPerCap)
tail(gdpPerCap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
gdpPerCap$GDP_PC<-gsub("$",'',gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC<-gsub(",","",gdpPerCap$GDP_PC)
#gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
gdpPerCap[1,2]
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
gdpPerCap$GDP_PC<-gsub("$ ",'',gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC<-gsub(",","",gdpPerCap$GDP_PC)
#gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
?grep
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
gdpPerCap$GDP_PC<-gsub("$",'',gdpPerCap$GDP_PC,ignore.case = TRUE)
gdpPerCap$GDP_PC<-gsub(",","",gdpPerCap$GDP_PC)
#gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
gdpPerCap$GDP_PC<-gsub("$","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC<-gsub(",","",gdpPerCap$GDP_PC)
#gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
#gdpPerCap$GDP_PC<-gsub("$","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC <- substring(gdpPerCap$GDP_PC, first=2)
gdpPerCap$GDP_PC<-gsub(",","",gdpPerCap$GDP_PC)
#gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
#gdpPerCap$GDP_PC<-gsub("$","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC <- substring(gdpPerCap$GDP_PC, first=2)
gdpPerCap$GDP_PC<-gsub(",","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
str(gdpPerCap)
install.packages("countrycode")
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1, # row names (numbers) are in the 1st column.
stringsAsFactors=FALSE)
head(gdpPerCap)
# tidy the gdp data
names(gdpPerCap)<-c("Country","GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
# remove the $s from the GDP column
#gdpPerCap$GDP_PC<-gsub("$","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC <- substring(gdpPerCap$GDP_PC, first=2)
gdpPerCap$GDP_PC<-gsub(",","",gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC<-as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
# replace country names with codes
library(countrycode)
gdpPerCap$Country <- countrycode(gdpPerCap$Country,  # change this data
origin="country.name",  # from a name
destination="iso2c")    # to a 2-char code
head(gdpPerCap)
head(gdpPerCap)
head(allFOIs)
head(gdpPerCap)
head(allFOIs)
foiGDP <- merge(allFOIs, gdpPerCap)
head(foiGDP)
gdpPerCap
foiGDP <- merge(allFOIs, gdpPerCap)
head(foiGDP)
# plot FOI vs GDP
library(ggplot2)
ggplot(data=foiGDP,   # Make a plot using our FOI and GDP data
aes(x=FOI ,       # with FOI on the x-axis
y=GDP_PC)) +  # and GDP_PC on the y-axis
geom_point()
cor.test(foiGDP$FOI, foiGDP$GDP_PC)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
a<-c("$","$$","$ ","$a")
b<-gsub("$","",a)
b
source('C:/Users/Mike/Rspace/FL_BigData/GoogleTrends/FOI.R', echo=TRUE)
b<-gsub("\$","",a)
b<-gsub("\\$","",a)
b
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?bayes
?Bayes
